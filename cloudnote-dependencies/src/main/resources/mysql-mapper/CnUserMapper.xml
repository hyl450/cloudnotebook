<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyl.cloudnote.mapper.CnUserMapper">
  <resultMap id="BaseResultMap" type="com.hyl.cloudnote.entity.CnUser">
    <id column="cn_user_id" jdbcType="VARCHAR" property="cnUserId" />
    <result column="cn_user_name" jdbcType="VARCHAR" property="cnUserName" />
    <result column="cn_user_password" jdbcType="VARCHAR" property="cnUserPassword" />
    <result column="cn_user_token" jdbcType="VARCHAR" property="cnUserToken" />
    <result column="cn_user_nick" jdbcType="VARCHAR" property="cnUserNick" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hyl.cloudnote.entity.CnUser">
    <result column="cn_user_desc" jdbcType="LONGVARCHAR" property="cnUserDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cn_user_id, cn_user_name, cn_user_password, cn_user_token, cn_user_nick
  </sql>
  <sql id="Blob_Column_List">
    cn_user_desc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hyl.cloudnote.entity.CnUserExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cn_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hyl.cloudnote.entity.CnUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cn_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cn_user
    where cn_user_id = #{cnUserId,jdbcType=VARCHAR}
  </select>
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cn_user
    where cn_user_name = #{cnUserName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from cn_user
    where cn_user_id = #{cnUserId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hyl.cloudnote.entity.CnUserExample">
    delete from cn_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hyl.cloudnote.entity.CnUser">
    insert into cn_user (cn_user_id, cn_user_name, cn_user_password, 
      cn_user_token, cn_user_nick, cn_user_desc
      )
    values (#{cnUserId,jdbcType=VARCHAR}, #{cnUserName,jdbcType=VARCHAR}, #{cnUserPassword,jdbcType=VARCHAR}, 
      #{cnUserToken,jdbcType=VARCHAR}, #{cnUserNick,jdbcType=VARCHAR}, #{cnUserDesc,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hyl.cloudnote.entity.CnUser">
    insert into cn_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cnUserId != null">
        cn_user_id,
      </if>
      <if test="cnUserName != null">
        cn_user_name,
      </if>
      <if test="cnUserPassword != null">
        cn_user_password,
      </if>
      <if test="cnUserToken != null">
        cn_user_token,
      </if>
      <if test="cnUserNick != null">
        cn_user_nick,
      </if>
      <if test="cnUserDesc != null">
        cn_user_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cnUserId != null">
        #{cnUserId,jdbcType=VARCHAR},
      </if>
      <if test="cnUserName != null">
        #{cnUserName,jdbcType=VARCHAR},
      </if>
      <if test="cnUserPassword != null">
        #{cnUserPassword,jdbcType=VARCHAR},
      </if>
      <if test="cnUserToken != null">
        #{cnUserToken,jdbcType=VARCHAR},
      </if>
      <if test="cnUserNick != null">
        #{cnUserNick,jdbcType=VARCHAR},
      </if>
      <if test="cnUserDesc != null">
        #{cnUserDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hyl.cloudnote.entity.CnUserExample" resultType="java.lang.Long">
    select count(*) from cn_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cn_user
    <set>
      <if test="record.cnUserId != null">
        cn_user_id = #{record.cnUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.cnUserName != null">
        cn_user_name = #{record.cnUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.cnUserPassword != null">
        cn_user_password = #{record.cnUserPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.cnUserToken != null">
        cn_user_token = #{record.cnUserToken,jdbcType=VARCHAR},
      </if>
      <if test="record.cnUserNick != null">
        cn_user_nick = #{record.cnUserNick,jdbcType=VARCHAR},
      </if>
      <if test="record.cnUserDesc != null">
        cn_user_desc = #{record.cnUserDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update cn_user
    set cn_user_id = #{record.cnUserId,jdbcType=VARCHAR},
      cn_user_name = #{record.cnUserName,jdbcType=VARCHAR},
      cn_user_password = #{record.cnUserPassword,jdbcType=VARCHAR},
      cn_user_token = #{record.cnUserToken,jdbcType=VARCHAR},
      cn_user_nick = #{record.cnUserNick,jdbcType=VARCHAR},
      cn_user_desc = #{record.cnUserDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cn_user
    set cn_user_id = #{record.cnUserId,jdbcType=VARCHAR},
      cn_user_name = #{record.cnUserName,jdbcType=VARCHAR},
      cn_user_password = #{record.cnUserPassword,jdbcType=VARCHAR},
      cn_user_token = #{record.cnUserToken,jdbcType=VARCHAR},
      cn_user_nick = #{record.cnUserNick,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyl.cloudnote.entity.CnUser">
    update cn_user
    <set>
      <if test="cnUserName != null">
        cn_user_name = #{cnUserName,jdbcType=VARCHAR},
      </if>
      <if test="cnUserPassword != null">
        cn_user_password = #{cnUserPassword,jdbcType=VARCHAR},
      </if>
      <if test="cnUserToken != null">
        cn_user_token = #{cnUserToken,jdbcType=VARCHAR},
      </if>
      <if test="cnUserNick != null">
        cn_user_nick = #{cnUserNick,jdbcType=VARCHAR},
      </if>
      <if test="cnUserDesc != null">
        cn_user_desc = #{cnUserDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where cn_user_id = #{cnUserId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hyl.cloudnote.entity.CnUser">
    update cn_user
    set cn_user_name = #{cnUserName,jdbcType=VARCHAR},
      cn_user_password = #{cnUserPassword,jdbcType=VARCHAR},
      cn_user_token = #{cnUserToken,jdbcType=VARCHAR},
      cn_user_nick = #{cnUserNick,jdbcType=VARCHAR},
      cn_user_desc = #{cnUserDesc,jdbcType=LONGVARCHAR}
    where cn_user_id = #{cnUserId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyl.cloudnote.entity.CnUser">
    update cn_user
    set cn_user_name = #{cnUserName,jdbcType=VARCHAR},
      cn_user_password = #{cnUserPassword,jdbcType=VARCHAR},
      cn_user_token = #{cnUserToken,jdbcType=VARCHAR},
      cn_user_nick = #{cnUserNick,jdbcType=VARCHAR}
    where cn_user_id = #{cnUserId,jdbcType=VARCHAR}
  </update>
</mapper>